name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies
      run: uv sync

    - name: Run tests with coverage
      run: |
        source .venv/bin/activate
        python -m pytest --cov=src/audio_manager --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies with dev tools
      run: |
        uv sync
        source .venv/bin/activate
        pip install ruff mypy

    - name: Run ruff
      run: |
        source .venv/bin/activate
        ruff check src/ tests/

    - name: Run mypy
      run: |
        source .venv/bin/activate
        mypy src/ --ignore-missing-imports